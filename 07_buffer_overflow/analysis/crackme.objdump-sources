
output/crackme:     file format elf32-i386


Disassembly of section .init:

00001000 <_init>:
    1000:	f3 0f 1e fb          	endbr32
    1004:	53                   	push   %ebx
    1005:	83 ec 08             	sub    $0x8,%esp
    1008:	e8 b3 00 00 00       	call   10c0 <__x86.get_pc_thunk.bx>
    100d:	81 c3 e7 2f 00 00    	add    $0x2fe7,%ebx
    1013:	8b 83 f4 ff ff ff    	mov    -0xc(%ebx),%eax
    1019:	85 c0                	test   %eax,%eax
    101b:	74 02                	je     101f <_init+0x1f>
    101d:	ff d0                	call   *%eax
    101f:	83 c4 08             	add    $0x8,%esp
    1022:	5b                   	pop    %ebx
    1023:	c3                   	ret

Disassembly of section .plt:

00001030 <strcmp@plt-0x10>:
    1030:	ff b3 04 00 00 00    	push   0x4(%ebx)
    1036:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
    103c:	00 00                	add    %al,(%eax)
	...

00001040 <strcmp@plt>:
    1040:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
    1046:	68 00 00 00 00       	push   $0x0
    104b:	e9 e0 ff ff ff       	jmp    1030 <_init+0x30>

00001050 <__libc_start_main@plt>:
    1050:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
    1056:	68 08 00 00 00       	push   $0x8
    105b:	e9 d0 ff ff ff       	jmp    1030 <_init+0x30>

00001060 <printf@plt>:
    1060:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
    1066:	68 10 00 00 00       	push   $0x10
    106b:	e9 c0 ff ff ff       	jmp    1030 <_init+0x30>

00001070 <puts@plt>:
    1070:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
    1076:	68 18 00 00 00       	push   $0x18
    107b:	e9 b0 ff ff ff       	jmp    1030 <_init+0x30>

00001080 <__isoc99_scanf@plt>:
    1080:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
    1086:	68 20 00 00 00       	push   $0x20
    108b:	e9 a0 ff ff ff       	jmp    1030 <_init+0x30>

Disassembly of section .text:

00001090 <_start>:
    1090:	f3 0f 1e fb          	endbr32
    1094:	31 ed                	xor    %ebp,%ebp
    1096:	5e                   	pop    %esi
    1097:	89 e1                	mov    %esp,%ecx
    1099:	83 e4 f0             	and    $0xfffffff0,%esp
    109c:	50                   	push   %eax
    109d:	54                   	push   %esp
    109e:	52                   	push   %edx
    109f:	e8 18 00 00 00       	call   10bc <_start+0x2c>
    10a4:	81 c3 50 2f 00 00    	add    $0x2f50,%ebx
    10aa:	6a 00                	push   $0x0
    10ac:	6a 00                	push   $0x0
    10ae:	51                   	push   %ecx
    10af:	56                   	push   %esi
    10b0:	ff b3 f8 ff ff ff    	push   -0x8(%ebx)
    10b6:	e8 95 ff ff ff       	call   1050 <__libc_start_main@plt>
    10bb:	f4                   	hlt
    10bc:	8b 1c 24             	mov    (%esp),%ebx
    10bf:	c3                   	ret

000010c0 <__x86.get_pc_thunk.bx>:
    10c0:	8b 1c 24             	mov    (%esp),%ebx
    10c3:	c3                   	ret
    10c4:	66 90                	xchg   %ax,%ax
    10c6:	66 90                	xchg   %ax,%ax
    10c8:	66 90                	xchg   %ax,%ax
    10ca:	66 90                	xchg   %ax,%ax
    10cc:	66 90                	xchg   %ax,%ax
    10ce:	66 90                	xchg   %ax,%ax
    10d0:	e8 e4 00 00 00       	call   11b9 <__x86.get_pc_thunk.dx>
    10d5:	81 c2 1f 2f 00 00    	add    $0x2f1f,%edx
    10db:	8d 8a 28 00 00 00    	lea    0x28(%edx),%ecx
    10e1:	8d 82 28 00 00 00    	lea    0x28(%edx),%eax
    10e7:	39 c8                	cmp    %ecx,%eax
    10e9:	74 1d                	je     1108 <__x86.get_pc_thunk.bx+0x48>
    10eb:	8b 82 e8 ff ff ff    	mov    -0x18(%edx),%eax
    10f1:	85 c0                	test   %eax,%eax
    10f3:	74 13                	je     1108 <__x86.get_pc_thunk.bx+0x48>
    10f5:	55                   	push   %ebp
    10f6:	89 e5                	mov    %esp,%ebp
    10f8:	83 ec 14             	sub    $0x14,%esp
    10fb:	51                   	push   %ecx
    10fc:	ff d0                	call   *%eax
    10fe:	83 c4 10             	add    $0x10,%esp
    1101:	c9                   	leave
    1102:	c3                   	ret
    1103:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1107:	90                   	nop
    1108:	c3                   	ret
    1109:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    1110:	e8 a4 00 00 00       	call   11b9 <__x86.get_pc_thunk.dx>
    1115:	81 c2 df 2e 00 00    	add    $0x2edf,%edx
    111b:	55                   	push   %ebp
    111c:	89 e5                	mov    %esp,%ebp
    111e:	53                   	push   %ebx
    111f:	8d 8a 28 00 00 00    	lea    0x28(%edx),%ecx
    1125:	8d 82 28 00 00 00    	lea    0x28(%edx),%eax
    112b:	83 ec 04             	sub    $0x4,%esp
    112e:	29 c8                	sub    %ecx,%eax
    1130:	89 c3                	mov    %eax,%ebx
    1132:	c1 e8 1f             	shr    $0x1f,%eax
    1135:	c1 fb 02             	sar    $0x2,%ebx
    1138:	01 d8                	add    %ebx,%eax
    113a:	d1 f8                	sar    %eax
    113c:	74 14                	je     1152 <__x86.get_pc_thunk.bx+0x92>
    113e:	8b 92 fc ff ff ff    	mov    -0x4(%edx),%edx
    1144:	85 d2                	test   %edx,%edx
    1146:	74 0a                	je     1152 <__x86.get_pc_thunk.bx+0x92>
    1148:	83 ec 08             	sub    $0x8,%esp
    114b:	50                   	push   %eax
    114c:	51                   	push   %ecx
    114d:	ff d2                	call   *%edx
    114f:	83 c4 10             	add    $0x10,%esp
    1152:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1155:	c9                   	leave
    1156:	c3                   	ret
    1157:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    115e:	66 90                	xchg   %ax,%ax
    1160:	f3 0f 1e fb          	endbr32
    1164:	55                   	push   %ebp
    1165:	89 e5                	mov    %esp,%ebp
    1167:	53                   	push   %ebx
    1168:	e8 53 ff ff ff       	call   10c0 <__x86.get_pc_thunk.bx>
    116d:	81 c3 87 2e 00 00    	add    $0x2e87,%ebx
    1173:	83 ec 04             	sub    $0x4,%esp
    1176:	80 bb 28 00 00 00 00 	cmpb   $0x0,0x28(%ebx)
    117d:	75 28                	jne    11a7 <__x86.get_pc_thunk.bx+0xe7>
    117f:	8b 83 f0 ff ff ff    	mov    -0x10(%ebx),%eax
    1185:	85 c0                	test   %eax,%eax
    1187:	74 12                	je     119b <__x86.get_pc_thunk.bx+0xdb>
    1189:	83 ec 0c             	sub    $0xc,%esp
    118c:	ff b3 24 00 00 00    	push   0x24(%ebx)
    1192:	ff 93 f0 ff ff ff    	call   *-0x10(%ebx)
    1198:	83 c4 10             	add    $0x10,%esp
    119b:	e8 30 ff ff ff       	call   10d0 <__x86.get_pc_thunk.bx+0x10>
    11a0:	c6 83 28 00 00 00 01 	movb   $0x1,0x28(%ebx)
    11a7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    11aa:	c9                   	leave
    11ab:	c3                   	ret
    11ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    11b0:	f3 0f 1e fb          	endbr32
    11b4:	e9 57 ff ff ff       	jmp    1110 <__x86.get_pc_thunk.bx+0x50>

000011b9 <__x86.get_pc_thunk.dx>:
    11b9:	8b 14 24             	mov    (%esp),%edx
    11bc:	c3                   	ret

000011bd <main>:
    11bd:	8d 4c 24 04          	lea    0x4(%esp),%ecx
    11c1:	83 e4 f0             	and    $0xfffffff0,%esp
    11c4:	ff 71 fc             	push   -0x4(%ecx)
    11c7:	55                   	push   %ebp
    11c8:	89 e5                	mov    %esp,%ebp
    11ca:	53                   	push   %ebx
    11cb:	51                   	push   %ecx
    11cc:	83 ec 20             	sub    $0x20,%esp
    11cf:	e8 ec fe ff ff       	call   10c0 <__x86.get_pc_thunk.bx>
    11d4:	81 c3 20 2e 00 00    	add    $0x2e20,%ebx
    11da:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
    11e0:	89 45 f4             	mov    %eax,-0xc(%ebp)
    11e3:	31 c0                	xor    %eax,%eax
    11e5:	83 ec 0c             	sub    $0xc,%esp
    11e8:	8d 83 14 e0 ff ff    	lea    -0x1fec(%ebx),%eax
    11ee:	50                   	push   %eax
    11ef:	e8 7c fe ff ff       	call   1070 <puts@plt>
    11f4:	83 c4 10             	add    $0x10,%esp
    11f7:	83 ec 0c             	sub    $0xc,%esp
    11fa:	8d 83 31 e0 ff ff    	lea    -0x1fcf(%ebx),%eax
    1200:	50                   	push   %eax
    1201:	e8 5a fe ff ff       	call   1060 <printf@plt>
    1206:	83 c4 10             	add    $0x10,%esp
    1209:	83 ec 08             	sub    $0x8,%esp
    120c:	8d 45 e0             	lea    -0x20(%ebp),%eax
    120f:	50                   	push   %eax
    1210:	8d 83 46 e0 ff ff    	lea    -0x1fba(%ebx),%eax
    1216:	50                   	push   %eax
    1217:	e8 64 fe ff ff       	call   1080 <__isoc99_scanf@plt>
    121c:	83 c4 10             	add    $0x10,%esp
    121f:	83 ec 08             	sub    $0x8,%esp
    1222:	8d 45 ea             	lea    -0x16(%ebp),%eax
    1225:	50                   	push   %eax
    1226:	8d 45 e0             	lea    -0x20(%ebp),%eax
    1229:	50                   	push   %eax
    122a:	e8 11 fe ff ff       	call   1040 <strcmp@plt>
    122f:	83 c4 10             	add    $0x10,%esp
    1232:	85 c0                	test   %eax,%eax
    1234:	75 14                	jne    124a <main+0x8d>
    1236:	83 ec 0c             	sub    $0xc,%esp
    1239:	8d 83 49 e0 ff ff    	lea    -0x1fb7(%ebx),%eax
    123f:	50                   	push   %eax
    1240:	e8 2b fe ff ff       	call   1070 <puts@plt>
    1245:	83 c4 10             	add    $0x10,%esp
    1248:	eb 12                	jmp    125c <main+0x9f>
    124a:	83 ec 0c             	sub    $0xc,%esp
    124d:	8d 83 5c e0 ff ff    	lea    -0x1fa4(%ebx),%eax
    1253:	50                   	push   %eax
    1254:	e8 17 fe ff ff       	call   1070 <puts@plt>
    1259:	83 c4 10             	add    $0x10,%esp
    125c:	b8 00 00 00 00       	mov    $0x0,%eax
    1261:	8b 55 f4             	mov    -0xc(%ebp),%edx
    1264:	65 2b 15 14 00 00 00 	sub    %gs:0x14,%edx
    126b:	74 05                	je     1272 <main+0xb5>
    126d:	e8 0e 00 00 00       	call   1280 <__stack_chk_fail_local>
    1272:	8d 65 f8             	lea    -0x8(%ebp),%esp
    1275:	59                   	pop    %ecx
    1276:	5b                   	pop    %ebx
    1277:	5d                   	pop    %ebp
    1278:	8d 61 fc             	lea    -0x4(%ecx),%esp
    127b:	c3                   	ret
    127c:	66 90                	xchg   %ax,%ax
    127e:	66 90                	xchg   %ax,%ax

00001280 <__stack_chk_fail_local>:
    1280:	f3 0f 1e fb          	endbr32
    1284:	56                   	push   %esi
    1285:	5e                   	pop    %esi
    1286:	e8 0e 00 00 00       	call   1299 <__x86.get_pc_thunk.ax>
    128b:	05 69 2d 00 00       	add    $0x2d69,%eax
    1290:	83 ec 0c             	sub    $0xc,%esp
    1293:	ff 90 ec ff ff ff    	call   *-0x14(%eax)

00001299 <__x86.get_pc_thunk.ax>:
    1299:	8b 04 24             	mov    (%esp),%eax
    129c:	c3                   	ret

Disassembly of section .fini:

000012a0 <_fini>:
    12a0:	f3 0f 1e fb          	endbr32
    12a4:	53                   	push   %ebx
    12a5:	83 ec 08             	sub    $0x8,%esp
    12a8:	e8 13 fe ff ff       	call   10c0 <__x86.get_pc_thunk.bx>
    12ad:	81 c3 47 2d 00 00    	add    $0x2d47,%ebx
    12b3:	83 c4 08             	add    $0x8,%esp
    12b6:	5b                   	pop    %ebx
    12b7:	c3                   	ret
