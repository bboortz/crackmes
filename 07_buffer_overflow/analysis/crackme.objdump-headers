
output/crackme:     file format elf32-i386
output/crackme
architecture: i386, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x00001090

Program Header:
    PHDR off    0x00000034 vaddr 0x00000034 paddr 0x00000034 align 2**2
         filesz 0x00000180 memsz 0x00000180 flags r--
  INTERP off    0x000001b4 vaddr 0x000001b4 paddr 0x000001b4 align 2**0
         filesz 0x00000013 memsz 0x00000013 flags r--
    LOAD off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x000004f0 memsz 0x000004f0 flags r--
    LOAD off    0x00001000 vaddr 0x00001000 paddr 0x00001000 align 2**12
         filesz 0x000002b8 memsz 0x000002b8 flags r-x
    LOAD off    0x00002000 vaddr 0x00002000 paddr 0x00002000 align 2**12
         filesz 0x00000150 memsz 0x00000150 flags r--
    LOAD off    0x00002ee4 vaddr 0x00003ee4 paddr 0x00003ee4 align 2**12
         filesz 0x00000138 memsz 0x0000013c flags rw-
 DYNAMIC off    0x00002eec vaddr 0x00003eec paddr 0x00003eec align 2**2
         filesz 0x000000f0 memsz 0x000000f0 flags rw-
    NOTE off    0x000001c8 vaddr 0x000001c8 paddr 0x000001c8 align 2**2
         filesz 0x00000078 memsz 0x00000078 flags r--
0x6474e553 off    0x000001ec vaddr 0x000001ec paddr 0x000001ec align 2**2
         filesz 0x00000034 memsz 0x00000034 flags r--
EH_FRAME off    0x00002064 vaddr 0x00002064 paddr 0x00002064 align 2**2
         filesz 0x00000034 memsz 0x00000034 flags r--
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-
   RELRO off    0x00002ee4 vaddr 0x00003ee4 paddr 0x00003ee4 align 2**0
         filesz 0x0000011c memsz 0x0000011c flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x00001000
  FINI                 0x000012a0
  INIT_ARRAY           0x00003ee4
  INIT_ARRAYSZ         0x00000004
  FINI_ARRAY           0x00003ee8
  FINI_ARRAYSZ         0x00000004
  GNU_HASH             0x00000240
  STRTAB               0x00000320
  SYMTAB               0x00000260
  STRSZ                0x000000e8
  SYMENT               0x00000010
  DEBUG                0x00000000
  PLTGOT               0x00003ff4
  PLTRELSZ             0x00000028
  PLTREL               0x00000011
  JMPREL               0x000004c8
  REL                  0x00000480
  RELSZ                0x00000048
  RELENT               0x00000008
  FLAGS_1              0x08000000
  VERNEED              0x00000420
  VERNEEDNUM           0x00000001
  VERSYM               0x00000408
  RELCOUNT             0x00000004

Version References:
  required from libc.so.6:
    0x0d696917 0x00 06 GLIBC_2.7
    0x09691f73 0x00 05 GLIBC_2.1.3
    0x0d696914 0x00 04 GLIBC_2.4
    0x069691b4 0x00 03 GLIBC_2.34
    0x0d696910 0x00 02 GLIBC_2.0

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .interp       00000013  000001b4  000001b4  000001b4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.gnu.build-id 00000024  000001c8  000001c8  000001c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.property 00000034  000001ec  000001ec  000001ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .note.ABI-tag 00000020  00000220  00000220  00000220  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .gnu.hash     00000020  00000240  00000240  00000240  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynsym       000000c0  00000260  00000260  00000260  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .dynstr       000000e8  00000320  00000320  00000320  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version  00000018  00000408  00000408  00000408  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .gnu.version_r 00000060  00000420  00000420  00000420  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rel.dyn      00000048  00000480  00000480  00000480  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .rel.plt      00000028  000004c8  000004c8  000004c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .init         00000024  00001000  00001000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt          00000060  00001030  00001030  00001030  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         0000020d  00001090  00001090  00001090  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000018  000012a0  000012a0  000012a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       00000061  00002000  00002000  00002000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 00000034  00002064  00002064  00002064  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     000000b8  00002098  00002098  00002098  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000004  00003ee4  00003ee4  00002ee4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000004  00003ee8  00003ee8  00002ee8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      000000f0  00003eec  00003eec  00002eec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000018  00003fdc  00003fdc  00002fdc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got.plt      00000020  00003ff4  00003ff4  00002ff4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 23 .data         00000008  00004014  00004014  00003014  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 24 .bss          00000004  0000401c  0000401c  0000301c  2**0
                  ALLOC
 25 .comment      0000001b  00000000  00000000  0000301c  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    df *ABS*	00000000              main.c
00000000 l    df *ABS*	00000000              
00003eec l     O .dynamic	00000000              _DYNAMIC
00002064 l       .eh_frame_hdr	00000000              __GNU_EH_FRAME_HDR
00003ff4 l     O .got.plt	00000000              _GLOBAL_OFFSET_TABLE_
00000000       F *UND*	00000000              strcmp@GLIBC_2.0
00000000       F *UND*	00000000              __libc_start_main@GLIBC_2.34
00000000  w      *UND*	00000000              _ITM_deregisterTMCloneTable
000010c0 g     F .text	00000004              .hidden __x86.get_pc_thunk.bx
00004014  w      .data	00000000              data_start
00000000       F *UND*	00000000              printf@GLIBC_2.0
0000401c g       .data	00000000              _edata
000012a0 g     F .fini	00000000              .hidden _fini
00000000       F *UND*	00000000              __stack_chk_fail@GLIBC_2.4
000011b9 g     F .text	00000000              .hidden __x86.get_pc_thunk.dx
00000000  w    F *UND*	00000000              __cxa_finalize@GLIBC_2.1.3
00004014 g       .data	00000000              __data_start
00000000       F *UND*	00000000              puts@GLIBC_2.0
00000000  w      *UND*	00000000              __gmon_start__
00004018 g     O .data	00000000              .hidden __dso_handle
00002004 g     O .rodata	00000004              _IO_stdin_used
00004020 g       .bss	00000000              _end
00001090 g     F .text	00000030              _start
00002000 g     O .rodata	00000004              _fp_hw
0000401c g       .bss	00000000              __bss_start
000011bd g     F .text	000000bf              main
00001299 g     F .text	00000000              .hidden __x86.get_pc_thunk.ax
00001280 g     F .text	00000019              .hidden __stack_chk_fail_local
00000000       F *UND*	00000000              __isoc99_scanf@GLIBC_2.7
0000401c g     O .data	00000000              .hidden __TMC_END__
00000000  w      *UND*	00000000              _ITM_registerTMCloneTable
00001000 g     F .init	00000000              .hidden _init


